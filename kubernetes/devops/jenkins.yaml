apiVersion: v1
kind: Service
metadata:
  name: jenkins
  labels:
    app: jenkins
    group: devops    
    tier: frontend
spec:
  type: NodePort
  ports:
  - port: 8080
    nodePort: 32100  
    protocol: TCP
  selector:
    app: jenkins
---
apiVersion: apps/v1beta2 # for versions before 1.8.0 use apps/v1beta1
kind: Deployment
metadata:
  name: jenkins
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jenkins
  template:
    metadata:
      labels:
        app: jenkins
        group: devops
        tier: frontend
    spec:
      securityContext:
       runAsUser: 1000
       fsGroup: 999  
       supplementalGroups: [ 1000, 100, 0 ]  
      containers:
      - name: jenkins
        image: misegr/jenkins
        imagePullPolicy: IfNotPresent        
        env:
        - name: JENKINS_PASS
          value: admin        
        ports:
        - containerPort: 8080
          name: jenkins
        # Volumes im Container
        volumeMounts:
        - mountPath: "/src"
          subPath: src
          name: "host-data"
        - mountPath: "/var/run/docker.sock"
          name: "docker-sock"   
        - mountPath: "/usr/bin/kubectl"
          name: "kubectl"          
        - mountPath: "/var/jenkins_home/.kube"
          name: "kube"  
      # Volumes in Host
      volumes:
      - name: "host-data"
        persistentVolumeClaim:
         claimName: data-claim 
      - name: "docker-cli-data"
        hostPath:
         path: "/data/docker-cli"
      - name: "docker-sock"
        hostPath:
         path: "/var/run/docker.sock" 
      - name: "kubectl"
        hostPath:
         path: "/usr/bin/kubectl" 
      - name: "kube"
        hostPath:
         path: "/home/vagrant/.kube" 
                    
